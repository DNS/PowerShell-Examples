
# case insensitive
-and
-or
-not
-xor
!

-eq
-ne
-ge
-gt
-le
-lt

-like
-ilike
-clike

-match
-imatch
-cmatch

-replace
-ireplace
-creplace

-split
-isplit
-csplit

-join

-contains
-icontains
-ccontains

-in
-cin

-is
-isnot

-as

-notmatch
-notlike
-notcontains
-notin




-band
-bor
-bnot
-bxor

# case sensitive
-cand
-cor
-ceq


# Redirection Operators
>, >>, 2>, 2>>, and 2>&1

Subexpression operator $( )

Group operator {  }

Array subexpression operator @( )
Array Comma operator ,
Array Index operator [ ]



Hash table literal syntax @{}

Call operator &
Background operator &
Dot sourcing operator .

Cast operator [ ]

# Format operator -f
"{0} {1,-10} {2:N}" -f 1,"hello",[math]::pi

Pipeline operator |
Pipeline chain operators && and ||

Range operator ..

Member-access operator .

Static member operator ::



------------------

# EXAMPLE:

# find a value in array, return true/false
3 -in 1..10
'a' -in 'a' .. 'z'

# checks whether an object is a specified .NET type and returns true/false
'a' -is [string]

# attempts to cast an object to a specified .NET type. 
# If the conversion succeeds, it returns the cast value; otherwise it returns $null instead of throwing an error.
$a = '42.555'
$a -as [int]

# simple matching
'abc' -like 'abc'
'abc' -like 'xyz'

# simple regex matching
'abc' -match 'b'
'abc' -match 'z'

# check contain value in array
@('abc', 'xyz') -contains 'abc'
